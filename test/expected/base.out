\set ECHO none
CREATE TABLE digits_4bs(id serial primary key, digits_4b digits_4b unique);
INSERT INTO digits_4bs(digits_4b) VALUES('123456789');
INSERT INTO digits_4bs(digits_4b) VALUES('');
INSERT INTO digits_4bs(digits_4b) VALUES('0');
INSERT INTO digits_4bs(digits_4b) VALUES('10');
INSERT INTO digits_4bs(digits_4b) VALUES('100');
INSERT INTO digits_4bs(digits_4b) VALUES('000');
INSERT INTO digits_4bs(digits_4b) VALUES('010');
INSERT INTO digits_4bs(digits_4b) VALUES('000000000'); -- test limits
INSERT INTO digits_4bs(digits_4b) VALUES('999999999');
SELECT * FROM digits_4bs ORDER BY digits_4b;
 id | digits_4b 
----+-----------
  2 | 
  3 | 0
  4 | 10
  6 | 000
  7 | 010
  5 | 100
  8 | 000000000
  1 | 123456789
  9 | 999999999
(9 rows)

SELECT MIN(digits_4b) AS min FROM digits_4bs;
 min 
-----
 
(1 row)

SELECT MAX(digits_4b) AS max FROM digits_4bs;
    max    
-----------
 999999999
(1 row)

-- index scan
TRUNCATE digits_4bs;
INSERT INTO digits_4bs(digits_4b) SELECT '4'||id FROM generate_series(5678, 8000) id;
SELECT id,digits_4b::text FROM digits_4bs WHERE digits_4b = '48000';
  id  | digits_4b 
------+-----------
 2332 | 48000
(1 row)

SET enable_seqscan = false;
SELECT id,digits_4b::text FROM digits_4bs WHERE digits_4b = '46000';
 id  | digits_4b 
-----+-----------
 332 | 46000
(1 row)

SELECT id,digits_4b FROM digits_4bs WHERE digits_4b >= '47000' LIMIT 5;
  id  | digits_4b 
------+-----------
 1332 | 47000
 1333 | 47001
 1334 | 47002
 1335 | 47003
 1336 | 47004
(5 rows)

SELECT count(id) FROM digits_4bs;
 count 
-------
  2323
(1 row)

SELECT count(id) FROM digits_4bs WHERE digits_4b <> ('46500'::text)::digits_4b;
 count 
-------
  2322
(1 row)

RESET enable_seqscan;
-- operators and conversions
SELECT '0'::digits_4b < '0'::digits_4b;
 ?column? 
----------
 f
(1 row)

SELECT '0'::digits_4b > '0'::digits_4b;
 ?column? 
----------
 f
(1 row)

SELECT '0'::digits_4b < '1'::digits_4b;
 ?column? 
----------
 t
(1 row)

SELECT '0'::digits_4b > '1'::digits_4b;
 ?column? 
----------
 f
(1 row)

SELECT '0'::digits_4b <= '0'::digits_4b;
 ?column? 
----------
 t
(1 row)

SELECT '0'::digits_4b >= '0'::digits_4b;
 ?column? 
----------
 t
(1 row)

SELECT '0'::digits_4b <= '1'::digits_4b;
 ?column? 
----------
 t
(1 row)

SELECT '0'::digits_4b >= '1'::digits_4b;
 ?column? 
----------
 f
(1 row)

SELECT '0'::digits_4b <> '0'::digits_4b;
 ?column? 
----------
 f
(1 row)

SELECT '0'::digits_4b <> '1'::digits_4b;
 ?column? 
----------
 t
(1 row)

SELECT '0'::digits_4b = '0'::digits_4b;
 ?column? 
----------
 t
(1 row)

SELECT '0'::digits_4b = '1'::digits_4b;
 ?column? 
----------
 f
(1 row)

-- COPY FROM/TO
TRUNCATE digits_4bs;
COPY digits_4bs(digits_4b) FROM STDIN;
COPY digits_4bs TO STDOUT;
2333	
2334	999999999
-- clean up --
DROP TABLE digits_4bs;
-- errors
SELECT ''::digits_4b;
 digits_4b 
-----------
 
(1 row)

SELECT '1000000000'::digits_4b;
ERROR:  digits_4b number "1000000000" must be 9 digits or smaller.
LINE 1: SELECT '1000000000'::digits_4b;
               ^
SELECT '!'::digits_4b;
ERROR:  digits_4b number "!" must only contain digits 0 to 9.
LINE 1: SELECT '!'::digits_4b;
               ^
